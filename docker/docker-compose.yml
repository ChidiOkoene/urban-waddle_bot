version: '3.8'

services:
  trading-bot:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: urban-waddle-bot
    restart: unless-stopped
    environment:
      - PYTHONPATH=/app/src
      - BOT_MODE=${BOT_MODE:-paper}
      - EXCHANGE_TYPE=${EXCHANGE_TYPE:-ccxt}
      - EXCHANGE_NAME=${EXCHANGE_NAME:-binance}
      - API_KEY=${API_KEY}
      - API_SECRET=${API_SECRET}
      - API_PASSPHRASE=${API_PASSPHRASE}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      - DISCORD_WEBHOOK_URL=${DISCORD_WEBHOOK_URL}
      - EMAIL_USERNAME=${EMAIL_USERNAME}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - EMAIL_TO=${EMAIL_TO}
      - DATABASE_URL=${DATABASE_URL:-sqlite:///data/trading_bot.db}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - DASHBOARD_PORT=${DASHBOARD_PORT:-8501}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./models:/app/models
      - ./backups:/app/backups
      - ./config:/app/config
    ports:
      - "${DASHBOARD_PORT:-8501}:8501"
    networks:
      - trading-network
    depends_on:
      - redis
      - prometheus
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8501/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: trading-bot-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - trading-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    container_name: trading-bot-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - trading-network

  grafana:
    image: grafana/grafana:latest
    container_name: trading-bot-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    ports:
      - "3000:3000"
    networks:
      - trading-network
    depends_on:
      - prometheus

  nginx:
    image: nginx:alpine
    container_name: trading-bot-nginx
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    ports:
      - "80:80"
      - "443:443"
    networks:
      - trading-network
    depends_on:
      - trading-bot

volumes:
  redis-data:
  prometheus-data:
  grafana-data:

networks:
  trading-network:
    driver: bridge
